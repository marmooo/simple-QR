class Koder{initialize(e){return(async()=>{console.log("Browser"),e||={};const t=e.wasmDirectory||"./wasm";return this.mod=await CreateKoder({locateFile:e=>`${t}/${e}`}),this.api={createBuffer:this.mod.cwrap("createBuffer","number",["number"]),deleteBuffer:this.mod.cwrap("deleteBuffer","",["number"]),triggerDecode:this.mod.cwrap("triggerDecode","number",["number","number","number"]),getScanResults:this.mod.cwrap("getScanResults","number",[])},this})()}decode(e,t,n){const o=this.api.createBuffer(t*n*4);this.mod.HEAPU8.set(e,o);const s=[];if(this.api.triggerDecode(o,t,n)>0){const e=this.api.getScanResults();s.push(this.mod.UTF8ToString(e)),this.api.deleteBuffer(e)}return s.length>0?s[0]:null}}